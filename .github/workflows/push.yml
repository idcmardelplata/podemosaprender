name: Elixir Linter and Test

on:
  push:
    branches:
      - '*' 
      - '!master'
      - '!develop'

jobs:
  linter-and-unit-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: podemosaprender_test
        ports:
          -  5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
     
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.2.6
          elixir-version: 1.10.3

      # Cache Mix Dependencies based on mix.lock
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      # Get Mix Dependencies only if cache was not hit
      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      # Cache the _build folder
      - name: Retrieve Build Cache
        uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      # Compile mix dependencies if the _build folder was not cached
      - name: Compile Mix Dependencies
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: MIX_ENV=test mix deps.compile

      - name: check the linter and do a static code analysis
        run: mix linter.check

      # Run the tests
      - name: Run Unit Tests
        run: |
          mix test | grep "0 failures"
          
      - name: cancelling pipeline if test fail
        uses: andymckay/cancel-action@0.2
        if: failure()
